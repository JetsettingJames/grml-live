#!/bin/sh
# Filename:      grml-autoconfig
# Purpose:       configuration interface for grml-autoconfig
# Authors:       grml-team (grml.org), (c) Michael Prokop <mika(at)grml.org>
# Bug-Reports:   see http://grml.org/bugs/
# License:       This file is licensed under the GPL v2.
# Latest change: Sam Jän 19 23:02:56 CET 2008 [mika]
################################################################################

if [ "$UID" != 0 ];  then
  echo "Error: please run this script with uid 0 (root)." ; exit 1
fi

LANG=C
LC_ALL=C
PN="$(basename $0)"
TMPFILE="$(mktemp)"

if grep -q small /etc/grml_version 2>/dev/null ; then
   AUTOCONFIG=/etc/grml/autoconfig.small
else
   AUTOCONFIG=/etc/grml/autoconfig
fi

[ -r $AUTOCONFIG ] || exit 1

# helper functions
activate_value()
{
  sed -i "s/$1.*/$1'yes'/" $AUTOCONFIG
}

deactivate_value()
{
  sed -i "s/$1.*/$1'no'/" $AUTOCONFIG
}

check_setting()
{
  grep -q $* $TMPFILE && return 0 || return 1
}

check_current_state()
{
  grep -q '^CONFIG_DHCP=.*yes'     $AUTOCONFIG && DHCPSTATUS=ON     || DHCPSTATUS=OFF
  if [ "$(grep '^auto' /etc/network/interfaces | sed 's/ lo// ; s/auto// ; s/ //g')" != "" ] ; then
     DHCPSTATUS=OFF
  fi
  grep -q '^CONFIG_FSTAB=.*yes'    $AUTOCONFIG && FSTABSTATUS=ON    || FSTABSTATUS=OFF
  grep -q '^CONFIG_CPU=.*yes'      $AUTOCONFIG && CPUSTATUS=ON      || CPUSTATUS=OFF
  grep -q '^CONFIG_ACPI_APM=.*yes' $AUTOCONFIG && ACPI_APMSTATUS=ON || ACPI_APMSTATUS=OFF
  grep -q '^CONFIG_SYSLOG=.*yes'   $AUTOCONFIG && SYSLOGSTATUS=ON   || SYSLOGSTATUS=OFF
  grep -q '^CONFIG_GPM=.*yes'      $AUTOCONFIG && GPMSTATUS=ON      || GPMSTATUS=OFF
}

# main program
interface()
{
  dialog --cr-wrap --clear --cancel-label "Exit" --title "$PN" --checklist "grml-autoconfig is the framework which includes hardware
detection, activation of system services and this is the
interface to activate or deactivate some features.

If you do not know what to do at this stage just leave it untouched,
the defaults are the recommended values.

All the configuration happens in the file /etc/grml/autoconfig - you can
edit it manually as well.
" 0 0 0 \
dhcp "check for network devices and run pump (get ip-address via DHCP)" $DHCPSTATUS \
fstab "update /etc/fstab entries (check for devices)" $FSTABSTATUS \
cpufreq "activate cpydyn/powernowd for frequency-scalable CPUs" $CPUSTATUS \
acpi_apm "load ACPI/APM modules" $ACPI_APMSTATUS \
syslog "start syslog-ng" $SYSLOGSTATUS \
gpm "start GPM (mouse on console)" $GPMSTATUS \
  2>$TMPFILE
}

set_values()
{
  check_setting dhcp      && activate_value CONFIG_DHCP=     || deactivate_value CONFIG_DHCP=
  check_setting fstab     && activate_value CONFIG_FSTAB=    || deactivate_value CONFIG_FSTAB=
  check_setting cpufreq   && activate_value CONFIG_CPU=      || deactivate_value CONFIG_CPU=
  check_setting acpi_apm  && activate_value CONFIG_ACPI_APM= || deactivate_value CONFIG_ACPI_APM=
  check_setting syslog    && activate_value CONFIG_SYSLOG=   || deactivate_value CONFIG_SYSLOG=
  check_setting gpm       && activate_value CONFIG_GPM=      || deactivate_value CONFIG_GPM=
}

# and now run it:
  check_current_state
  interface
  retval=$?
  case $retval in
   0)
    set_values && dialog --stdout --title "${PN}" --msgbox "Adjusting values via grml-autoconfig was successful!" 5 60 || \
    dialog --stdout --title "${PN}" --msgbox "There was an error adjusting values via grml-autoconfig. Sorry." 5 60
    rm -f $TMPFILE &>/dev/null
    ;;
   1)
    echo "Exit pressed."
    ;;
   255)
    echo "ESC pressed."
    exit 1
    ;;
  esac

## END OF FILE #################################################################
