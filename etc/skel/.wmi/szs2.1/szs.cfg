##################################################
#                    GLOBALS                     #
##################################################
# Global variables... this variables are used by all modules

# the script uses this file to log the debugmessages
global.logfile=pyszs.log

# Up to how many digits after comma should be roundet?
global.accuracy=2 # (not all modules support that)

# Debuglevel Reference:
#
# Level	Name		Demand
# =====	====		======
# 0	None		Show absolutly no debugmessages
# 1	Critical	Show only criticals (if the prog crashes)
# 2	Warning		Show warnmessages (the prog can override it)
# 3	Debug		Show all the stuff
global.debuglevel=0

# time in seconds to re-calculate and re-call the modules
global.interval=1

# separator thats separates the displayed texts (not the meters/bars!)
# spaces are cognited
global.seperator= | 



##################################################
#                      MAIN                      #
##################################################
# the main program

# The 'welcometext'. Set it to !NONE if you don't want it.
main.welcome=

# The modules to load.
#main.modules=biff,battery,load,memory,bandwidth,clock,text,diskusage
main.modules=load,memory,clock

# The used remote programs
# for wmi-10:
main.prog_txt=/usr/bin/wmiremote -t
main.prog_bar=/usr/bin/wmiremote -m 
# for wmi around version 10-current-710 and possibly wmii:
#main.prog_txt=/usr/bin/wmir set /common/statusbar/text
#main.prog_bar=/usr/bin/wmir set /common/meter/data



##################################################
#                    BATTERY                     #
##################################################
# battery module shows the load of your battery

# if you deactivated your battery, set it to zero
# (not needed in most cases, cause autocognition)
battery.activate=1

# statefile (usually /proc/acpi/battery/BAT0/state)
battery.batstate=/proc/acpi/battery/BAT0/state

# infofile (usually /proc/acpi/battery/BAT0/info)
battery.batinfo=/proc/acpi/battery/BAT0/info

# use "animated" bar/meter if the battery is in loading state?
battery.animbatload=1

# the bar label
battery.label=bat

# variables are possible to show the loadingstate in the label
battery.tvar=-1
battery.lvar=1
# variable reference:
# 0 shows nothing
# 1 shows the procentual value
# 2 shows the real value
# 3 shows both
# if tvar is a negative value, no text would be showed
# if tvar is 0, /\ is showed if the battery is charging
# and \/ is showed if it discharges




##################################################
#                  BANDWIDTH                     #
##################################################
# bandwidth monitors the bandwidth of given interfaces 

# define the interfaces to monitor (all values are in kBytes) 
# maxdown/up are optional. If a real value exceeds the given max value
# the max value will be adjusted
# syntax: <ifname>:<label>:<max down bandwidth>:<max up bandwidth>,<ifname...
#bandwidth.ifs=ppp0:inet,eth0:LAN:10000:10000
bandwidth.ifs=eth0:eth0:1000:1000,eth1:eth1:1000:1000
#bandwidth.ifs=eth0:eth0:1000:1000,eth1:eth1:1000:1000,eth2:WLAN:1000:1000

##################################################
#                     BIFF                       #
##################################################
# biff checks your imap/pop accounts for new mail

# check every biff.imapmultiplier * global.interval seconds for new mails
# necessary to bring down imap server load, if you don't care set it to 1
biff.imapmultiplier=60

# imap account to monitor in the format:
# <server>:<user>:<pass><ssl yes/no>,<mailbox>:<label>,<mailbox>:<label...
# multiple accounts are allowed
biff.imapaccount=imap.server.com:user:pass:no,INBOX:IN,lists.szs-devel:szs
biff.imapaccount=imaps.server2.com:user2:pass2:yes,INBOX:IN2

# check every biff.popmultiplier * global.interval seconds for new mails
# necessary to bring down pop server load, if you don't care set it to 1
biff.popmultiplier=300

# pop3 account to monitor in the format:
# <server>:<user>:<pass>:<ssl yes/no>:<label>
# multiple accounts are allowed
# Note: SSL is only supported in pyton 2.4 or above 
biff.popaccount=pop.server.com:user:pass:no:label
biff.popaccount=pop.server2.com:user2:pass2:no:label2
biff.popaccount=pop.sslserver.com:user2:pass2:yes:label3



##################################################
#                     LOAD                       #
##################################################
# load shows the system load and the CPU utilization
# system load shows the 1, 5, 15 minute average
# CPU util. shows cpu(system+user+nice) and io(io+hwint+swint) utilization
# CPU util. works only on linux 2.6

# system load label
load.loadlabel=load

# maximum system load (100%), 0 for omitting the system load
load.maxload=3

# cpu/io label
load.cpulabel=CPU/IO

# 1 for showing cpu/io utilization and 0 for omitting it
load.showcpu=1



##################################################
#                    MEMORY                      #
##################################################
# memory shows the RAM and swap usage

# label
memory.label=RAM/swap

# 1 for showing RAM usage and 0 for omitting it
memory.showram=1

# 1 for showing swap usage and 0 for omitting it
memory.showswap=1



##################################################
#                     CLOCK                      #
##################################################
# clock shows the time

# DayDDMonYY HH:MM:SS, works like `date`
#clock.format=%a%d%b%y %N
clock.format=%A %d.%m.%Y %R
#clock.format=%A %d.%m.%Y %T

# The Workbeat is a time range which clock counts procentual
# (eg ...=8:00,16:00; if it is 12 o'Clock, clock gives 50% back,
# if it is 14 o'Clock, clock gives 75% back, and so on)
# leave it empty, if you do not want to see it
# please use 24 hour system
#clock.workbeat=22:00,23:00
clock.workbeat=00:01,23:59

# show the workbeat if it is outside the times?
clock.wboutside=yes

# value to start with? (negative values are possible)
clock.sw=-10

# which value to end with?
clock.ew=120

# should clock counts up or down?
clock.wbdirection=up

# show it as text, bar/meter or both?
clock.wbshow=text

# the meter label if you want it
clock.wblabel=wb



##################################################
#                     TEXT                       #
##################################################
# text shows only some specific (bar-)text

# the text
text.txt=mikas laptop...

# show the text as marquee (0 or 1)
text.marquee=1

# length of marquee-text
text.length=10

# the bartext
#text.bar=10%,20%,30%,40%,50%,60%,70%,80%,90%stuff 
text.bar=



##################################################
#                    DISKUSAGE                   #
##################################################
# diskusage shows the usage of your partitions (if they be mounted)

# the disks you want to be shown (device:label)
diskusage.disks=hda2:root
diskusage.disks=hda3:home
diskusage.disks=sda1:usb
diskusage.disks=loop0:loop
# also possible is this way:
# diskusage.disks=hda2:root,hda5:home,sda1:usb,loop0:loop
